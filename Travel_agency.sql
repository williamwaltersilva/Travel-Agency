
-- CRIAR TABELAS NO SQL SERVER PARA CARREGAR AS PLANILHAS DO EXCEL
CREATE TABLE VENDAS_SAC (
DATA_VENDA DATE 
,ID_CLIENTE VARCHAR (50) 
,PACOTES_VENDIDOS VARCHAR (50)
);

CREATE TABLE VENDAS_LOJAS (
DATA_VENDA DATE 
,ID_CLIENTE VARCHAR (50) 
,PACOTES_VENDIDOS VARCHAR (50)
);

CREATE TABLE VENDAS_OUTBOUND (
DATA_VENDA DATE 
,ID_CLIENTE VARCHAR (50) 
,PACOTES_VENDIDOS VARCHAR (50)
);

CREATE TABLE SOCIOS (
MES VARCHAR(6)
, ID_CLIENTE VARCHAR(6)
)

CREATE TABLE CATALOGO_PACOTES (
MES VARCHAR(6)
,DESC_PACOTE VARCHAR(20)
,PRECO INT
)

UPDATE CATALOGO_PACOTES
SET MES= REPLACE(MES, 2020,2021)
GO

CREATE TABLE #BASE_ENRIQUECIDA (
DATA_VENDA DATE
,ID_CLIENTE VARCHAR(50)
,PACOTES_VENDIDOS VARCHAR(50)
,CANAL VARCHAR(50)
,FLG_SOCIO INT
,VENDA_MESMO_DIA INT
,MES VARCHAR(50)
,PACOTE_1 VARCHAR(50)
,QTDE_1 INT
,PACOTE_2 VARCHAR(50)
,QTDE_2 INT
,PRECO_PCT_1 INT
,PRECO_PCT_2 INT
) 

WITH VENDAS_TOTAIS AS (
SELECT DATA_VENDA, ID_CLIENTE,PACOTES_VENDIDOS, CANAL='SAC'
FROM VENDAS_SAC
UNION ALL
SELECT DATA_VENDA, ID_CLIENTE,PACOTES_VENDIDOS, CANAL='LOJA'
FROM VENDAS_LOJAS
UNION ALL
SELECT DATA_VENDA, ID_CLIENTE,PACOTES_VENDIDOS, CANAL='OUTBOUND'
FROM VENDAS_OUTBOUND ),

TBL1 AS (
SELECT DATA_VENDA, ID_CLIENTE, REPLACE(PACOTES_VENDIDOS, '+','|') AS PACOTES_VENDIDOS, CANAL,
		CASE WHEN  ID_CLIENTE IN (SELECT ID_CLIENTE FROM SOCIOS)  THEN 1  ELSE 0 
		END AS FLG_SOCIO,
		CASE WHEN PACOTES_VENDIDOS LIKE '%+%' THEN 1 ELSE 0
		END AS VENDA_MESMO_DIA
FROM VENDAS_TOTAIS), 

TBL2 AS (
SELECT *
		, REPLACE(CAST(LEFT (DATA_VENDA, 7) AS VARCHAR (7)), '-','') AS MES
		, REVERSE(PARSENAME(REPLACE(REVERSE(PACOTES_VENDIDOS), '|', '.'), 1)) AS [PACOTE_1]
		, CAST( REVERSE(PARSENAME(REPLACE(REVERSE(PACOTES_VENDIDOS), '|', '.'), 2)) AS INT)AS [QTDE_1]
		, REVERSE(PARSENAME(REPLACE(REVERSE(PACOTES_VENDIDOS), '|', '.'), 3)) AS [PACOTE_2]
		, CAST( REVERSE(PARSENAME(REPLACE(REVERSE(PACOTES_VENDIDOS), '|', '.'), 4))AS INT)  AS [QTDE_2]
FROM TBL1 ),

TBL3 AS (
SELECT t2.*, c.PRECO AS PRECO_PCT_1, d.PRECO as PRECO_PCT_2
FROM TBL2 t2
LEFT JOIN CATALOGO_PACOTES c
on T2.PACOTE_1 = c.DESC_PACOTE AND t2.MES = c.MES
LEFT JOIN CATALOGO_PACOTES d
ON t2.PACOTE_2 = d.DESC_PACOTE
AND t2.MES = d.MES
)

INSERT INTO #BASE_ENRIQUECIDA
select * from TBL3


-- NESTA ETAPA INICIA O PROCESSO DE SEPARAÇÃO EM CLUSTERS DOS CLIENTES DE ACORDO COM O SEU PERFIL DE COMPRA. 
-- PARA CADA CLUSTER É REALIZADO O CALCULO FINANCEIRO PARA APLICAR AS REGRAS DE DESCONTOS, SENDO:

  -- * CLUSTER 1A - SÓCIOS QUE REALIZOU COMPRAS EM DIAS DIFERENTES
  -- * CLUSTER 1B - SÓCIOS QUE REALIZARAM SOMENTE 1 COMPRA
  -- * CLUSTER 2 - SÓCIOS QUE COMPRARAM 4 PACOTES NO MESMO DIA
  -- * CLUSTER 3A - NÃO SÓCIOS QUE COMPRARAM 4 PACOTES NO MESMO DIA
  -- * CLUSTER 3B - NÃO SÓCIOS QUE REALIZARAM SOMENTE 1 COMPRA

-------------------------------------------------------------------------------------------------------------------------
-- CRIAR COLUNA CLUSTER PARA SEPARAR OS TIPOS DE CLIENTES POR PERFIL
ALTER TABLE #BASE_ENRIQUECIDA
ADD CLUSTER VARCHAR (10);

-- CLUSTER 1A - SÓCIOS QUE REALIZOU COMPRAS EM DIAS DIFERENTES

-- VARIÁVEL CLUSTER_1A
DECLARE @CLUSTER_1A TABLE (ID_CLIENTE VARCHAR(50) , COMPRAS_SEPARADAS INT)
INSERT INTO @CLUSTER_1A
SELECT ID_CLIENTE, COUNT(DATA_VENDA) AS COMPRAS_SEPARADAS
FROM #BASE_ENRIQUECIDA
WHERE (FLG_SOCIO = 1 AND VENDA_MESMO_DIA = 0 )
GROUP BY ID_CLIENTE
HAVING COUNT(DATA_VENDA) > 1

UPDATE #BASE_ENRIQUECIDA 
SET CLUSTER = '1A'
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM @CLUSTER_1A)
GO


-- CLUSTER 1B - SÓCIOS QUE REALIZARAM SOMENTE 1 COMPRA

-- VARIÁVEL CLUSTER_1B

DECLARE @CLUSTER_1B TABLE (ID_CLIENTE VARCHAR(50) , COMPRAS_SEPARADAS INT)
INSERT INTO @CLUSTER_1B
SELECT ID_CLIENTE, COUNT(DATA_VENDA) AS COMPRAS_SEPARADAS
FROM #BASE_ENRIQUECIDA
WHERE (FLG_SOCIO = 1 AND VENDA_MESMO_DIA = 0)
GROUP BY ID_CLIENTE
HAVING COUNT(DATA_VENDA) = 1

UPDATE #BASE_ENRIQUECIDA 
SET CLUSTER = '1B'
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM @CLUSTER_1B)
GO

-- CLUSTER 2 - SÓCIOS QUE COMPRARAM 4 PACOTES NO MESMO DIA

UPDATE #BASE_ENRIQUECIDA
SET CLUSTER = '2'
WHERE FLG_SOCIO = 1 AND VENDA_MESMO_DIA = 1
GO

-- CLUSTER 3A - NÃO SÓCIOS QUE COMPRARAM 4 PACOTES NO MESMO DIA
UPDATE #BASE_ENRIQUECIDA
SET CLUSTER = '3A'
WHERE FLG_SOCIO = 0 AND VENDA_MESMO_DIA = 1
GO


-- CLUSTER 3B - NÃO SÓCIOS QUE REALIZARAM SOMENTE 1 COMPRA
UPDATE #BASE_ENRIQUECIDA
SET CLUSTER = '3B'
WHERE FLG_SOCIO = 0 AND VENDA_MESMO_DIA = 0
GO

-- ** CLUSTER 1A **  CÁLCULO FINANCEIRO

ALTER TABLE #BASE_ENRIQUECIDA
ADD COMPRA_1A_DESC_10p DECIMAL(10,2),
 COMPRA_1B_DESC_12p DECIMAL(10,2),
 COMPRA_2A_DESC_14p DECIMAL(10,2),
 COMPRA_2B_DESC_16p DECIMAL(10,2),
 VALOR_TOTAL_PCTS DECIMAL(10,2)
GO

-- CALCULANDO O VALOR DO DESCONTO PARA AS COMPRAS DO **PRIMEIRO DIA** EM QUE O CLIENTE REALIZOU NO MÊS

DECLARE @COMPRAS_CLUSTER_1a_P1 TABLE (CHAVE VARCHAR(50))
INSERT INTO @COMPRAS_CLUSTER_1a_P1
SELECT CAST(MIN(DATA_VENDA) AS VARCHAR (50)) + ID_CLIENTE AS CHAVE-- AS DATA_VENDA, ID_CLIENTE
FROM #BASE_ENRIQUECIDA
WHERE CLUSTER = '1A'
GROUP BY ID_CLIENTE 

-- DESCONTO NA PRIMEIRA COMPRA DO MÊS
UPDATE #BASE_ENRIQUECIDA
SET COMPRA_1A_DESC_10p = PRECO_PCT_1 - ( (PRECO_PCT_1 * 10)/100)
WHERE CAST(DATA_VENDA AS VARCHAR(50)) + ID_CLIENTE IN (SELECT CHAVE FROM @COMPRAS_CLUSTER_1a_P1)

-- DESCONTO NA SEGUNDA COMPRA DO MÊS
UPDATE #BASE_ENRIQUECIDA
SET COMPRA_1B_DESC_12p = PRECO_PCT_1 - ( (PRECO_PCT_1 * 12)/100)
WHERE CAST(DATA_VENDA AS VARCHAR(50)) + ID_CLIENTE IN (SELECT CHAVE FROM @COMPRAS_CLUSTER_1a_P1)

GO

-- CALCULANDO O VALOR DO DESCONTO PARA AS COMPRAS DO **SEGUNDO DIA** EM QUE O CLIENTE REALIZOU NO MÊS

DECLARE @COMPRAS_CLUSTER_1a_P2 TABLE (CHAVE VARCHAR(50))
INSERT INTO @COMPRAS_CLUSTER_1a_P2
SELECT CAST(MAX(DATA_VENDA) AS VARCHAR (50)) + ID_CLIENTE AS CHAVE
FROM #BASE_ENRIQUECIDA
WHERE CLUSTER = '1A'
GROUP BY ID_CLIENTE 

-- DESCONTO NA TERCEIRA COMPRA DO MÊS
UPDATE #BASE_ENRIQUECIDA
SET COMPRA_2A_DESC_14p = PRECO_PCT_1 - ( (PRECO_PCT_1 * 14)/100)
WHERE CAST(DATA_VENDA AS VARCHAR(50)) + ID_CLIENTE IN (SELECT CHAVE FROM @COMPRAS_CLUSTER_1a_P2)

-- DESCONTO NA QUARTA COMPRA DO MÊS
UPDATE #BASE_ENRIQUECIDA
SET COMPRA_2B_DESC_16p = PRECO_PCT_1 - ( (PRECO_PCT_1 * 16)/100)
WHERE CAST(DATA_VENDA AS VARCHAR(50)) + ID_CLIENTE IN (SELECT CHAVE FROM @COMPRAS_CLUSTER_1a_P2)
GO


-- VALOR TOTAL DOS PACOTES ADQUIRIDOS POR CLIENTE 
UPDATE #BASE_ENRIQUECIDA
SET VALOR_TOTAL_PCTS = COALESCE(COMPRA_1A_DESC_10p,0) + COALESCE(COMPRA_1B_DESC_12p,0) + COALESCE(COMPRA_2A_DESC_14p,0) + COALESCE(COMPRA_2B_DESC_16p,0)
WHERE CLUSTER = '1A'
GO

-- ** CLUSTER 1B **  CALCULO FINANCEIRO

-- DESCONTO NA PRIMEIRA COMPRA DO MÊS
UPDATE #BASE_ENRIQUECIDA
SET COMPRA_1A_DESC_10p = PRECO_PCT_1 - ( (PRECO_PCT_1 * 10)/100)
WHERE CLUSTER ='1B'
GO

-- DESCONTO NA SEGUNDA COMPRA DO MÊS
UPDATE #BASE_ENRIQUECIDA
SET COMPRA_1B_DESC_12p = PRECO_PCT_1 - ( (PRECO_PCT_1 * 12)/100)
WHERE CLUSTER ='1B'
GO

-- VALOR TOTAL DOS PACOTES ADQUIRIDOS POR CLIENTE 
UPDATE #BASE_ENRIQUECIDA
SET VALOR_TOTAL_PCTS = COALESCE(COMPRA_1A_DESC_10p,0) + COALESCE(COMPRA_1B_DESC_12p,0)
WHERE CLUSTER='1B'
GO


-- ** CLUSTER 2 **  CALCULO FINANCEIRO

-- SEPARAR QUAL O PACOTE COM PREÇO MAIS ELEVADO ADQUIRIDO NO MESMO DIA E QUE SERA CONSIDERADO COMO A 1ª COMPRA

ALTER TABLE #BASE_ENRIQUECIDA
ADD PRIMEIRO_VLR_CLUSTER_2 DECIMAL(10,2),
	SEGUNDO_VLR_CLUSTER_2 DECIMAL(10,2)
GO

-- VALOR MAIS ALTO
UPDATE #BASE_ENRIQUECIDA
SET PRIMEIRO_VLR_CLUSTER_2 = PRECO_PCT_1
WHERE CLUSTER = '2' AND (PRECO_PCT_1 >= PRECO_PCT_2)
GO

UPDATE #BASE_ENRIQUECIDA
SET PRIMEIRO_VLR_CLUSTER_2 = PRECO_PCT_2
WHERE CLUSTER = '2' AND (PRECO_PCT_2 > PRECO_PCT_1)
GO

-- VALOR MAIS BAIXO
UPDATE #BASE_ENRIQUECIDA
SET SEGUNDO_VLR_CLUSTER_2 = PRECO_PCT_1
WHERE CLUSTER = '2' AND (PRECO_PCT_1 < PRECO_PCT_2)
GO

UPDATE #BASE_ENRIQUECIDA
SET SEGUNDO_VLR_CLUSTER_2 = PRECO_PCT_2
WHERE CLUSTER = '2' AND (PRECO_PCT_2 < PRECO_PCT_1)
GO

-- ENCONTRADOS OS VALORES MAIS ELEVADOS PARA O CLUSTER 2 - 
-- FAZER OS CALCULOS DOS DESCONTOS NA PRIMEIRA COMPRA DO MÊS

UPDATE #BASE_ENRIQUECIDA
SET COMPRA_1A_DESC_10p = PRIMEIRO_VLR_CLUSTER_2 - ( (PRIMEIRO_VLR_CLUSTER_2 * 10)/100)
WHERE CLUSTER = '2'
GO

-- DESCONTO NA SEGUNDA COMPRA DO MÊS
UPDATE #BASE_ENRIQUECIDA
SET COMPRA_1B_DESC_12p = PRIMEIRO_VLR_CLUSTER_2 - ( (PRIMEIRO_VLR_CLUSTER_2 * 12)/100)
WHERE CLUSTER = '2'
GO

-- DESCONTO NA TERCEIRA COMPRA DO MÊS
UPDATE #BASE_ENRIQUECIDA
SET COMPRA_2A_DESC_14p = SEGUNDO_VLR_CLUSTER_2 - ( (SEGUNDO_VLR_CLUSTER_2 * 14)/100)
WHERE CLUSTER = '2'
GO

-- DESCONTO NA QUARTA COMPRA DO MÊS
UPDATE #BASE_ENRIQUECIDA
SET COMPRA_2B_DESC_16p = SEGUNDO_VLR_CLUSTER_2 - ( (SEGUNDO_VLR_CLUSTER_2 * 16)/100)
WHERE CLUSTER = '2'
GO

-- VALOR TOTAL DOS PACOTES ADQUIRIDOS POR CLIENTE 
UPDATE #BASE_ENRIQUECIDA
SET VALOR_TOTAL_PCTS = COALESCE(COMPRA_1A_DESC_10p,0) + COALESCE(COMPRA_1B_DESC_12p,0) + COALESCE(COMPRA_2A_DESC_14p,0)  + COALESCE(COMPRA_2B_DESC_16p,0)
WHERE CLUSTER='2'
GO



-- ** CLUSTER 3A E 3B **  - CALCULO FIANCEIRO (NOTA: NÃO SÓCIOS NÃO TEM DESCONTO)


ALTER TABLE #BASE_ENRIQUECIDA
ADD VLR_COMPRA_1_CLUSTER_3 DECIMAL(10,2),
	VLR_COMPRA_2_CLUSTER_3 DECIMAL(10,2)
GO


UPDATE #BASE_ENRIQUECIDA
SET VLR_COMPRA_1_CLUSTER_3 = PRECO_PCT_1 * QTDE_1
WHERE CLUSTER = '3A' OR CLUSTER = '3B'
GO

UPDATE #BASE_ENRIQUECIDA
SET VLR_COMPRA_2_CLUSTER_3 = PRECO_PCT_2 * QTDE_2
WHERE CLUSTER = '3A' OR CLUSTER = '3B'
GO


-- VALOR TOTAL DOS PACOTES ADQUIRIDOS POR CLIENTE 
UPDATE #BASE_ENRIQUECIDA
SET VALOR_TOTAL_PCTS = VLR_COMPRA_1_CLUSTER_3 + COALESCE(VLR_COMPRA_2_CLUSTER_3,0)
WHERE CLUSTER = '3A' OR CLUSTER = '3B'
GO



-- SEPARAÇÃO SÓCIOS BASE E FRESH PARA CÁLCULO DA MENSALIDADE E DA JOIA

-- CRIAR BASE PARA CALCULAR A RECEITA DO PROGRAMA DE SÓCIOS EM MARÇO E ABRIL
CREATE TABLE #SOCIOS_MENS_JOIA (
MES VARCHAR (50)
,ID_CLIENTE VARCHAR(50)
,MENSALIDADE_MAR DECIMAL(10,2)
,JOIA_MAR DECIMAL(10,2)
,MENSALIDADE_ABR DECIMAL(10,2)
,JOIA_ABR DECIMAL(10,2)
,VALOR_FINAL DECIMAL(10,2)
)
GO

INSERT INTO #SOCIOS_MENS_JOIA (MES, ID_CLIENTE)
SELECT MES, ID_CLIENTE
FROM SOCIOS
WHERE MES = 202103 OR MES = 202104
GO

-- SÓCIOS FEVEREIRO
DECLARE @SOCIOS_FEV TABLE (MES VARCHAR(50), ID_CLIENTE VARCHAR(50))
INSERT INTO @SOCIOS_FEV
SELECT *
FROM SOCIOS
WHERE MES = '202102'

-- SÓCIOS MARÇO
DECLARE @SOCIOS_MAR TABLE (MES VARCHAR(50), ID_CLIENTE VARCHAR(50))
INSERT INTO @SOCIOS_MAR
SELECT *
FROM SOCIOS
WHERE MES = '202103'

-- SÓCIOS ABRIL
DECLARE @SOCIOS_ABR TABLE (MES VARCHAR(50), ID_CLIENTE VARCHAR(50))
INSERT INTO @SOCIOS_ABR
SELECT *
FROM SOCIOS
WHERE MES = '202104'

-- SEPARANDO CLIENTES BASE E FRESH EM MARÇO E ABRIL

-- CLIENTE FRESH MARÇO
DECLARE @SOCIOS_FRESH_MAR TABLE (MES VARCHAR(50), ID_CLIENTE VARCHAR(50))
INSERT INTO @SOCIOS_FRESH_MAR
SELECT *
FROM @SOCIOS_MAR
WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM @SOCIOS_FEV)


UPDATE #SOCIOS_MENS_JOIA
SET JOIA_MAR = 100 ,
    MENSALIDADE_MAR = 20
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM @SOCIOS_FRESH_MAR) AND MES='202103'

-- CLIENTE BASE MARÇO
DECLARE @SOCIOS_BASE_MAR TABLE (MES VARCHAR(50), ID_CLIENTE VARCHAR(50))
INSERT INTO @SOCIOS_BASE_MAR
SELECT *
FROM @SOCIOS_MAR
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM @SOCIOS_FEV)


UPDATE #SOCIOS_MENS_JOIA
SET JOIA_MAR = 0 ,
    MENSALIDADE_MAR = 20
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM @SOCIOS_BASE_MAR) AND MES='202103'


-- CLIENTE FRESH ABRIL
DECLARE @SOCIOS_FRESH_ABR TABLE (MES VARCHAR(50), ID_CLIENTE VARCHAR(50))
INSERT INTO @SOCIOS_FRESH_ABR
SELECT *
FROM @SOCIOS_ABR
WHERE ID_CLIENTE NOT IN (SELECT ID_CLIENTE FROM @SOCIOS_MAR)


UPDATE #SOCIOS_MENS_JOIA
SET JOIA_ABR = 100 ,
    MENSALIDADE_ABR = 20
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM @SOCIOS_FRESH_ABR) AND MES='202104'

-- CLIENTE BASE ABRIL
DECLARE @SOCIOS_BASE_ABR TABLE (MES VARCHAR(50), ID_CLIENTE VARCHAR(50))
INSERT INTO @SOCIOS_BASE_ABR
SELECT *
FROM @SOCIOS_ABR
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM @SOCIOS_MAR)

UPDATE #SOCIOS_MENS_JOIA
SET JOIA_ABR = 0 ,
    MENSALIDADE_ABR = 20
WHERE ID_CLIENTE IN (SELECT ID_CLIENTE FROM @SOCIOS_BASE_ABR) AND MES='202104'


UPDATE #SOCIOS_MENS_JOIA
SET VALOR_FINAL = COALESCE(MENSALIDADE_MAR,0) + COALESCE(JOIA_MAR,0) + COALESCE(MENSALIDADE_ABR,0) + COALESCE(JOIA_ABR,0)


-- CRIAR AS TABELAS PARA O FECHAMENTO DA ANÁLISE
CREATE TABLE #PROG_SOCIOS (
MES VARCHAR (50)
,RECEITA_PROG_SOCIOS DECIMAL(10,2)
)

CREATE TABLE #RECEITA_PACOTES (
MES VARCHAR (50)
,RECEITA_PACOTES DECIMAL(10,2)
)


CREATE TABLE #RECEITA_FINAL(
 MES VARCHAR(50)
,RECEITA_PROG_SOCIOS DECIMAL(10,2)
,RECEITA_PACOTES DECIMAL(10,2)
,RECEITA_TOTAL DECIMAL(10,2)
)

-- CONSOLIDAÇÃO RECEITA PROGRAMA DE SOCIOS
INSERT INTO #PROG_SOCIOS 
SELECT MES, SUM(VALOR_FINAL)
FROM #SOCIOS_MENS_JOIA
GROUP BY MES
ORDER BY MES ASC


-- CONSOLIDAÇÃO RECEITA PACOTES DE VIAGEM FINAL
INSERT INTO #RECEITA_PACOTES 
SELECT MES, SUM(VALOR_TOTAL_PCTS) 
FROM #BASE_ENRIQUECIDA
GROUP BY MES
GO

INSERT INTO #RECEITA_FINAL
SELECT p.MES, p.RECEITA_PROG_SOCIOS, r.RECEITA_PACOTES, p.RECEITA_PROG_SOCIOS + r.RECEITA_PACOTES
FROM #PROG_SOCIOS p
LEFT JOIN #RECEITA_PACOTES r
ON p.MES = r.MES
go


-- CONSOLIDAÇÃO FINAL DOS RESULTADOS 
SELECT * FROM #RECEITA_FINAL


